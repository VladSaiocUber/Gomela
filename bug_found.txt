When preload_subtrees is 0 then no deadlock deadlock and no safety errors.
https://github.com/google/trillian/blob/master/storage/cache/subtree_cache.go#L108
Otherwise when s_populateConcurrency and want are strictly greater than subtrees
then safety error . However, there is a check in the code if want == 0 then return
https://github.com/google/trillian/blob/master/storage/cache/subtree_cache.go#L108
Interesting, very similar to FindAll !


add -1 before add +1 https://github.com/kubernetes/kubernetes/blob/master/test/e2e/storage/vsphere/nodemapper.go#L132 (Note that its in a test folder)


could potentially add-1 twice per loop. https://github.com/Workiva/go-datastructures/blob/master/rtree/hilbert/hilbert.go#L39

looks fishy https://github.com/tenta-browser/tenta-dns/blob/master/responder/blacklist/blacklist.go#L69
What if after close(responses) counter is 0 you still do add -1 ??




Write clearly about those examples, and then potentially an issue,

https://github.com/openshift/source-to-image/blob/master/pkg/util/interrupt/interrupt.go#L65
Line 71 could technically send on a closed channel since it could be closed before it is executed



False alarm with select : https://github.com/rancher/os/blob/master/cmd/cloudinitsave/cloudinitsave.go#L313
